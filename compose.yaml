services:
  # Real catalog service with Node.js and MongoDB
  catalog-service:
    build:
      context: ./catalogue-service
    ports:
      - "8081:3000"
    volumes:
      - ./catalogue-service:/app
      - /app/node_modules
    depends_on:
      - mongodb
    environment:
      - PORT=3000
      - MONGO_URI=mongodb://mongodb:27017/catalogue_db
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3000/products"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  order-service:
    build:
      context: ./order-service
    ports:
      - "8082:80"
    volumes:
      - ./order-service:/var/www/html
    depends_on:
      - postgres
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=orders_db
      - DB_USER=orders_user
      - DB_PASSWORD=orders_password
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/test.php"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=orders_db
      - POSTGRES_USER=orders_user
      - POSTGRES_PASSWORD=orders_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./order-service/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U orders_user -d orders_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  adminer:
    image: adminer
    ports:
      - "8083:8080"
    depends_on:
      - postgres
    restart: unless-stopped

  mongodb:
    image: mongo:6-jammy
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./catalogue-service/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  postgres_data:
  mongodb_data:
